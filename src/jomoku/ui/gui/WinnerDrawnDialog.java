package jomoku.ui.gui;

/**
 * Dialog for the end of a game, displaying whether a player won or wether the
 * current game is drawn. Asks the users whether they want to replay or to close
 * the program.
 *
 * @author Johannes Bechberger
 * @version 1.0
 */
public class WinnerDrawnDialog extends javax.swing.JDialog {

    private boolean replay = false;

    /**
     * Creates new form WinnerDrawnDialog.
     *
     * @param parent Parent frame this dialog belongs to
     * @param text text of this dialog (its main label)
     */
    public WinnerDrawnDialog(java.awt.Frame parent, String text) {
        super(parent, true);
        initComponents();
        setLocationRelativeTo(parent);
        label.setText(text);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        replayButton = new javax.swing.JButton();

        setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);

        label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label.setText("Black player won after 100 actions");

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        replayButton.setText("Replay");
        replayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(closeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(replayButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(replayButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        replay = false;
        setVisible(false);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void replayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replayButtonActionPerformed
        replay = true;
        setVisible(false);
    }//GEN-LAST:event_replayButtonActionPerformed

    /**
     *
     * @return Does the user want to replay?
     */
    public boolean wantsToReplay() {
        return replay;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel label;
    private javax.swing.JButton replayButton;
    // End of variables declaration//GEN-END:variables
}
